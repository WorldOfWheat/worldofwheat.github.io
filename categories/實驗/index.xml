<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>實驗 on 小麥的異想世界</title><link>https://worldofwheat.github.io/categories/%E5%AF%A6%E9%A9%97/</link><description>Recent content in 實驗 on 小麥的異想世界</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Sat, 14 Sep 2024 21:00:00 +0800</lastBuildDate><atom:link href="https://worldofwheat.github.io/categories/%E5%AF%A6%E9%A9%97/index.xml" rel="self" type="application/rss+xml"/><item><title>Captive Portal 實驗</title><link>https://worldofwheat.github.io/p/captive-portal-%E5%AF%A6%E9%A9%97/</link><pubDate>Sat, 14 Sep 2024 21:00:00 +0800</pubDate><guid>https://worldofwheat.github.io/p/captive-portal-%E5%AF%A6%E9%A9%97/</guid><description>&lt;p>相信大家在去如火車站之類的地方都會發現到很多免費的網路，這個時候心動的點下去之後卻跳出了一個登入畫面，一般來說需要輸入身份證之類的資料才能使用。&lt;/p>
&lt;p>上面提到的就是所謂的強制門戶（Captive Portal），這個功能是讓使用者驗證的階段改用網頁來進行，因為透過網頁就可以做到同一組帳號密碼在任何地方都能登入的功能，這跟大家在家裡使用的密碼登入的原理不同，前者是先讓使用者連接再驗證而後者是先驗證密碼再讓人連接。&lt;/p>
&lt;h1 id="事先聲明">事先聲明
&lt;/h1>&lt;ul>
&lt;li>本篇教學提到的任何漏洞僅用於教學，不得用於非法用途&lt;/li>
&lt;li>所有的測試不保證在所有的環境皆可使用，僅在我本人的電腦上測試成功&lt;/li>
&lt;/ul>
&lt;h1 id="在實驗前我需要準備什麼">在實驗前我需要準備什麼？
&lt;/h1>&lt;p>軟體跟硬體在這次的實驗都有需要準備的東西，而且我建議你需要有一定的基礎網路知識再開始學習，因為我不對再對一些基本的知識做解釋。&lt;/p>
&lt;h3 id="硬體">硬體
&lt;/h3>&lt;ul>
&lt;li>一台主機
&lt;ul>
&lt;li>可以是電腦、樹苺派等，但是我推薦使用 Linux 作業系統，Windows 理論上也做到的但我沒有實驗過&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>一台可以連接 Wi-Fi 的設備
&lt;ul>
&lt;li>用於測試，我推薦使用 Android、Windows、iOS 方便測試&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>一台 AP
&lt;ul>
&lt;li>可以不用是無線路由器，也可以是無線網卡，但是需要注意在生產環境上我不推薦使用無線網卡&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="軟體">軟體
&lt;/h3>&lt;p>因為我本人僅在 kali Linux 上實驗，因此我不提供其它作業系統的軟體，如果有需要請自行到網路上尋找&lt;/p>
&lt;ul>
&lt;li>iptables
&lt;ul>
&lt;li>核心部份，用於做 NAT&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Dnsmasq
&lt;ul>
&lt;li>因為要觸發 Captive Portal 需要有 DNS 的協助，可以使用其它 DNS 伺服器軟體&lt;/li>
&lt;li>本次實驗因為使用了無線網卡，因此在 Linux 需要手動做 DHCP，而 Dnsmasq 剛好有 DHCP 的功能&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>web server
&lt;ul>
&lt;li>需要準備一個用於驗證使用者的網頁，本次實驗使用 flask&lt;/li>
&lt;li>這部分也是最核心的部分，驗證和一般的網頁服務沒有差別&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>hostapd
&lt;ul>
&lt;li>這次的實驗我使用了 &lt;a class="link" href="https://www.tp-link.com/tw/home-networking/adapter/tl-wn722n/" target="_blank" rel="noopener"
>TL-WN722N&lt;/a> 這款無線網卡做為熱點，你可以選擇任何可以做到熱點功能的網卡，在生產環境中我不推薦使用無線網卡，應該使用無路路由器&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="強制門戶是怎麼做到的">強制門戶是怎麼做到的？
&lt;/h1>&lt;p>當一台手機連接到帶有 Captive Portal 的 AP 時，手機會先發起一條 DNS 請求，這條 DNS 請求一般來說會解析到一個事先約定好的網站，而當 AP 需要驗證或者不可用的時候則會返回其它的結果，手機也是靠這點做到判斷一個熱點有沒有網路及需不需要驗證。當 DNS 請求被解析後如果網站並非手機預其的網站則會將使用者跳轉到 Captive Portal，此時只需要驗證成功就可以連上網路。&lt;/p>
&lt;p>需要注意到提供驗證的網頁不可為 HTTPS，因為手機預期的域名和登入畫面上的憑證不同，因此會出現網站不安全的狀況。&lt;/p>
&lt;h3 id="技術細節">技術細節
&lt;/h3>&lt;p>上敘提到的 DNS 請求在不同的裝置上也有所不同，下方是常見的 DNS 請求列表：&lt;/p>
&lt;ul>
&lt;li>clients3.google.com&lt;/li>
&lt;li>connectivitycheck.gstatic.com&lt;/li>
&lt;li>connectivitycheck.android.com&lt;/li>
&lt;li>detectportal.firefox.com&lt;/li>
&lt;li>&lt;a class="link" href="https://www.msftncsi.com" target="_blank" rel="noopener"
>www.msftncsi.com&lt;/a>&lt;/li>
&lt;li>captive.apple.com&lt;/li>
&lt;/ul>
&lt;p>上面那些域名就是每個不同的系統用來判斷是否可以連線及是否有 Captive Portal 的基準，因此想要觸發強制門戶的方法就是透過 iptables 的 NAT 表中的 PREROUTING 鏈做到的，因為 DNS 是明文請求，因此只需要目標為 53 號端口的連結指向到 DNS 伺服器就可以做到重定向，而這裡的 DNS 伺服器需要自行架設，這次的實驗使用 Dnsmasq。&lt;/p>
&lt;h1 id="開始實驗吧">開始實驗吧
&lt;/h1>&lt;p>我假設大家都已經準備好了軟硬體，因此這邊我就直接跳過安裝階段&lt;/p>
&lt;ol>
&lt;li>
&lt;p>將要用來處理驗證的介面卡準備好，可以是無線網卡或者路由器，接著將介面卡指定一個 IP，需要注意這裡的子網域應該要是 /24 才能分配給其它連入的裝置 IP&lt;/p>
&lt;ul>
&lt;li>這次實驗我使用的是無線網卡，&lt;a class="link" href="https://gist.github.com/WorldOfWheat/d3fad3f823be85be22f995e88b3691b3" target="_blank" rel="noopener"
>hostapd 範例&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>先準備好 iptables，下方我提供一個我寫的範例，&lt;strong>我強烈建議將註解讀一篇&lt;/strong>，在理解了之後才能在自己的主機上也做出一樣的效果&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 下面兩個是最主要的變數&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># INTERFACE 代表的是 AP 的介面，不論這邊使用的是無線網卡還是路由器都是一樣的&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># WEBSERVER 代表的是提供驗證的網頁伺服器，要確定是可以連接到的&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">INTERFACE&lt;/span>&lt;span class="o">=&lt;/span>wlan0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">WEBSERVER&lt;/span>&lt;span class="o">=&lt;/span>192.168.0.68
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 下面四條會把 filter 和 nat 表完全清空，實驗為了方便才會清空，執行前請特別注意&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iptables -t filter -F
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iptables -t nat -F
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iptables -t filter -X
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iptables -t nat -X
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># FORWARD 鏈預設設為 DROP&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 這步非常的重要，否則就會發生未經驗證，但是卻可以透過 IP 直接對外連接的狀況。實際上的表現為有些時候可以連接有些時候不行&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iptables -P FORWARD DROP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># AUTHORIZED 這條鏈用於新增已經驗證的使用者&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iptables -N AUTHORIZED
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 當使用者發送封包的時候先到 AUTHORIZED 檢查，如果未經驗證的話則會往下一條&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iptables -A FORWARD -i &lt;span class="nv">$INTERFACE&lt;/span> -j AUTHORIZED
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 放行所有由介面卡流出的封包，因為在輸入已經做到管制，因此輸出一般來說不就做管制&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iptables -A FORWARD -o &lt;span class="nv">$INTERFACE&lt;/span> -j ACCEPT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># AUTHORIZED 這條鏈用於新增已經驗證的使用者&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 需要注意 filter 和 nat 的鏈不共用&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iptables -t nat -N AUTHORIZED
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 將已經驗證的使用者跳過 DNS 重定向&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iptables -t nat -A PREROUTING -i &lt;span class="nv">$INTERFACE&lt;/span> -j AUTHORIZED
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 如果前一翛規則還沒驗證通過則進行 DNS 自定向&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iptables -t nat -A PREROUTING -i &lt;span class="nv">$INTERFACE&lt;/span> -p udp --dport &lt;span class="m">53&lt;/span> -j DNAT --to-destination &lt;span class="nv">$WEBSERVER&lt;/span>:53
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 因為實驗中的主要透過 eth0 來連入外網，因此需要做 SNAT 才能連上外網&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>準備好 Dnsmasq，下面我一樣寫了一個範例，如果你使用自己的 DNS 軟體再自行研究&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># 指定介面卡，這裡的介面卡和第一步的介面卡相同
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">interface=wlan0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 要監聽哪個 IP，和第一步的指配給介面卡的 IP 相同
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">listen-address=10.1.0.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 設定分配的連入裝置的 IP 子網域
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dhcp-range=10.1.0.2,10.1.0.254,1h
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 設定分配的連入裝置的 IP 子網域遮罩
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dhcp-option=1,255.255.255.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 設定分配的連入裝置的預設 DNS 伺服器，需要注意這裡的 DNS 不可以是用於重定向的伺服器，否則會造成設備強制門戶偵測錯誤
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dhcp-option=6,1.1.1.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># DNS 監聽埠號
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">port=53
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 下面代表將 Captive Portal 偵測用的域名重定向到自己的 DNS 伺服器
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 下面三個是 Android 的偵測域名，別的廠排可能會有別的域名，這點再自行測試
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">address=/clients3.google.com/10.1.0.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">address=/connectivitycheck.gstatic.com/10.1.0.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">address=/connectivitycheck.android.com/10.1.0.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 下面為 Firefox 瀏覽器的偵測域名
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">address=/detectportal.firefox.com/10.1.0.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 下面為 Windows 的偵測域名
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">address=/www.msftncsi.com/10.1.0.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 下面為 Apple 產品的偵測域名
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">address=/captive.apple.com/10.1.0.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>準備用於驗證的網頁伺服器，因為伺服器會有各種需求，以下為簡易的範例，實際上的驗證伺服器並不會這麼簡單
&lt;ul>
&lt;li>本次實驗使用的網頁後端為 Python 的 Flask，其它框架理論上也可以做到相同的事&lt;/li>
&lt;li>驗證伺服器和普通的網頁服務一樣，所有該注意的漏洞一樣也需要注意，而且因為其特殊性更需要注意，下方這個案例就說明了不正確的設定會造成什麼樣的狀況
&lt;ul>
&lt;li>&lt;a class="link" href="https://blog.duckll.tw/post/howihackitaiwan/" target="_blank" rel="noopener"
>漏洞案例&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;script src="https://gist.github.com/WorldOfWheat/0ace701b01f286ccd546c2103cd2adc0.js">&lt;/script>
&lt;ol start="4">
&lt;li>確定 Dnsmasq、iptables、熱點、驗證伺服器都已經啟動，此時連線後應該會自動跳轉到驗證伺服器，再輸入帳號密碼後則會連線成功&lt;/li>
&lt;/ol>
&lt;h1 id="結論">結論
&lt;/h1>&lt;p>強制門戶可以在 2024 年已經不在那麼的常見，大部分的學校都已經改為 WAP2-Enterprise 這種驗證方式，雖然這樣的驗證方式在錯誤的配置方式仍然充滿了漏洞，但這還是比強制門戶好了很多，因為強制門戶相對有比較多的漏洞可以繞過驗證。&lt;/p>
&lt;p>這次的實驗我花了很多時間在除錯上，也是第一次知道強制門戶是怎麼樣做到在連入的時候跳出登入畫面的，算是解答了我多年前的疑惑。&lt;/p></description></item><item><title>StrongSwan 實驗</title><link>https://worldofwheat.github.io/p/strongswan-%E5%AF%A6%E9%A9%97/</link><pubDate>Fri, 12 Jul 2024 21:00:00 +0800</pubDate><guid>https://worldofwheat.github.io/p/strongswan-%E5%AF%A6%E9%A9%97/</guid><description>&lt;p>我的手機不知道在哪一年的更新之後，內建的 VPN 就只剩下 IKEv2/IPsec 這種方式了，又不知道在哪天我就開始想要自己架一個 VPN 伺服器，2024 年的寒假我就開始研究怎麼樣用 VPN 連線回家。&lt;/p>
&lt;p>因為系統是 Linux，第一個在網路上找到的就是 strongSwan 這套軟體，然後又找了一下網路上的教學，但我照著教學不知道為什麼就是連線不了，憑證也是簽了又刪無數次。但我沒有因此放棄，我直接去看官方文件，官方的文件都是用 swanctl 設定檔的格式寫的，我本來還堅持用 strongSwan 的預設格式，因為網路上的教學撰寫的時間久遠，我最一開始接觸到的就是如此，但在試用之後才發現 swanctl 的設定檔更加的人性化，比原本的格式不知道好了多少。strongSwan 官方還給出了大部分設定的&lt;a class="link" href="https://docs.strongswan.org/docs/5.9/index.html" target="_blank" rel="noopener"
>範例&lt;/a>，應該百分之九十的情況都可以處理。&lt;/p>
&lt;p>因此我決定寫一篇相對比較新的教學，也算是做個紀錄，給未來想要架設的人有個方向。&lt;/p>
&lt;h1 id="概要">概要
&lt;/h1>&lt;p>以下是我自己整理的重點：&lt;/p>
&lt;ul>
&lt;li>IPsec 用於保護兩個節點之間的資料傳輸，使用 UDP 協議傳輸&lt;/li>
&lt;li>IPsec 在開始傳輸之前需要先進行金錀協商和身份驗證，而實作方法常見的有 L2TP 或 IKEv2，因此常常可以在手機看到 L2TP/IPsec 或 IKEv2/IPsec，而 strongSwan 提供的是 IKEv2/IPsec&lt;/li>
&lt;li>IKEv2 分為兩步
&lt;ul>
&lt;li>第一步兩個節點會協商出保護第二步的密鑰和後續必要的資訊&lt;/li>
&lt;li>第二步會進行身份驗證及協商出 IPsec 的密鑰，此時的封包受到第一步協商出的密鑰加密&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>理論上不存在伺服端跟客戶端，但實際上還是會有一端當成伺服器&lt;/li>
&lt;li>伺服端跟客戶端都需要設定驗證方式，只有在兩邊都驗證通過才能連線&lt;/li>
&lt;li>驗證方式有憑證、EAP、PSK 三種，EAP 在易用性跟安全性上取得了平衡
&lt;ul>
&lt;li>EAP 如果想要也可以用第三方伺服器驗證（RADIUS）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>伺服器一般來說都會用憑證做為自身的憑證方式，手機版 strongSwan 客戶端也只能連線使用憑證驗證的伺服器&lt;/li>
&lt;/ul>
&lt;h1 id="連接握手">連接握手
&lt;/h1>&lt;p>下方使用設定如下：&lt;/p>
&lt;ul>
&lt;li>伺服器為憑證驗證&lt;/li>
&lt;li>客戶端為 EAP 驗證&lt;/li>
&lt;/ul>
&lt;p>IKEv2 握手有四步：&lt;/p>
&lt;ol>
&lt;li>客戶端對伺服器握手&lt;/li>
&lt;li>伺服器返回握手，如果有開啟憑證請求會在這一步傳送&lt;/li>
&lt;li>客戶端返回對應的驗證方式，這裡是 EAP。若有開啟憑證請求也會一同傳送&lt;/li>
&lt;li>伺服器返回憑證&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>在握手的前兩步雙方會協商出密鑰保護第三步和第四步&lt;/li>
&lt;li>憑證請求的目地在於雙方皆可以設定不主動傳送憑證，若不主動傳送則需要憑證請求才能得到憑證
&lt;ul>
&lt;li>例如 Windows 或 strongSwan-network-manager 皆不會主動傳送憑證&lt;/li>
&lt;li>憑證請求較消耗流量，可以自行決定是否開啟&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://www.cnblogs.com/efzju/p/5041797.html" target="_blank" rel="noopener"
>參考資料&lt;/a>&lt;/p>
&lt;h1 id="架設">架設
&lt;/h1>&lt;p>以下是我自己整理的重點：&lt;/p>
&lt;ul>
&lt;li>如果使用 Docker 要開始 privileged 才能使用&lt;/li>
&lt;li>strongswan 需要在 ipsec 這個套件上面運作，在安裝 strongswan 的時候會自動連同 ipsec 一起安裝&lt;/li>
&lt;li>新版的 strongswan 使用 swanctl 來管理各種設定，網路上有些教學使用僅 strongSwan 的設定檔，兩者功能相同&lt;/li>
&lt;li>架設需要安裝套件，下方列出的套件皆可使用 apt 安裝
&lt;ul>
&lt;li>&lt;code>iptables&lt;/code> 流量轉發用，不裝僅能連線但沒有網路&lt;/li>
&lt;li>&lt;code>strongswan&lt;/code> 核心&lt;/li>
&lt;li>&lt;code>strongswan-swanctl&lt;/code> 管理 strongswan 的設定檔等，強烈推薦使用&lt;/li>
&lt;li>&lt;code>strongswan-pki&lt;/code> 可由 OpenSSL 替代&lt;/li>
&lt;li>&lt;code>libstrongswan-extra-plugins&lt;/code> 加解密等等的算法套件&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>若直接安裝套件有些功能無法使用，例如 TPM 等等，因此特殊功能需要自行編譯&lt;/li>
&lt;li>需要準備伺服器用的憑證&lt;/li>
&lt;li>伺服器的封包轉發和 iptables 流量轉發要設定才能連到外網&lt;/li>
&lt;/ul>
&lt;h1 id="憑證">憑證
&lt;/h1>&lt;p>以下是我自己整理的重點：&lt;/p>
&lt;ul>
&lt;li>一定要先懂基本的 PKI，可以參考&lt;a class="link" href="https://www.youtube.com/watch?v=vVbLSba6vOI" target="_blank" rel="noopener"
>這部影片&lt;/a>&lt;/li>
&lt;li>能不自簽就不自簽，因為細節非常多，一個不小心就不能連線
&lt;ul>
&lt;li>我自己測試了網路上申請的憑證 Buypass、Let&amp;rsquo;s Encrypt 皆沒有問題&lt;/li>
&lt;li>從網路上申請的憑證一定需要域名，換句話說不想自簽就一定需要有域名&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>如果客戶端要使用憑證做為驗證，除非客戶端有辦法從網路上申請到憑證，否則一定需要自簽&lt;/li>
&lt;/ul>
&lt;p>申請憑證重點如下：&lt;/p>
&lt;ul>
&lt;li>一定需要域名，沒有域名無法申請&lt;/li>
&lt;li>推薦 Let&amp;rsquo;s Encrypt 的憑證，註冊方法可以參考官方文件
&lt;ul>
&lt;li>自動化申請可以使用 Certbot，使用方法可以參考&lt;a class="link" href="https://certbot.eff.org/" target="_blank" rel="noopener"
>官方文件&lt;/a>，這個是最簡單的方法&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>自簽憑證重點：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>如果沒有域名，則自簽憑證內容的所有域名都以 IP 代替&lt;/p>
&lt;/li>
&lt;li>
&lt;p>手機版 strongSwan 跟 Windows 當客戶端連線對憑證各自不同的要求，自簽一定需要注意&lt;/p>
&lt;/li>
&lt;li>
&lt;p>需要準備根憑證，只有被根憑證簽屬的憑證才可以被信任，因此根憑證的私鑰強烈建議要加密&lt;/p>
&lt;ul>
&lt;li>假設客戶端使用自簽憑證做為驗證手段，則伺服端一定要有根憑證才可以驗證，反之亦然&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>所有憑證需要是 X509v3 的版本才能使用，因為需要有一些額外的資訊用於驗證&lt;/p>
&lt;/li>
&lt;li>
&lt;p>過程中所有的金鑰生成請使用 RSA 或 ECDSA，因為本人在測試時發現會發生錯誤&lt;/p>
&lt;ul>
&lt;li>我僅在 Zenfone 8 和 Windows 10 上進行測試，其它系統因為我也沒有，所以無法測試&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Android 和 Windows 憑證安裝使用 PKCS#12 格式&lt;/p>
&lt;/li>
&lt;li>
&lt;p>CN 和 SAN 一定要設定成域名，缺一不可&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Extended Key Usage 需要有 TLS Web Server Authentication&lt;/p>
&lt;/li>
&lt;li>
&lt;p>伺服器憑證我推薦使用 OpenSSL 簽發，因為需要比較多細項，建議使用設定檔或 pki 生成&lt;/p>
&lt;details>
&lt;summary>伺服器憑證設定檔範例&lt;/summary>
```plaintext
[ req ]
prompt = no
# 天數
days = 30
distinguished_name = req_distinguished_name
req_extensions = v3_req
&lt;p>[ req_distinguished_name ]&lt;/p>
&lt;h1 id="根域名">根域名
&lt;/h1>&lt;p>commonName = worldofwheat.us.to&lt;/p>
&lt;p>[ v3_req ]
basicConstraints = critical, CA:FALSE
extendedKeyUsage = serverAuth
subjectAltName = @sans&lt;/p>
&lt;p>[ sans ]&lt;/p>
&lt;h1 id="ikev2-主要驗的就是下面的值可以新增多筆紀錄">IKEv2 主要驗的就是下面的值，可以新增多筆紀錄
&lt;/h1>&lt;p>DNS.0 = worldofwheat.us.to
DNS.1 = vpn.worldofwheat.us.to&lt;/p>
&lt;h1 id="dns1--testworldofwheatusto">DNS.1 = test.worldofwheat.us.to
&lt;/h1>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;/details&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>常用指令如下，OpenSSL 和 pki 指令功能相同：&lt;/p>
&lt;ul>
&lt;li>過程中需要動用到很多指令的操作。strongSwan 官方有給出 pki 這套工具，也可以使用 OpenSSL 代替&lt;/li>
&lt;li>生成私鑰
&lt;ul>
&lt;li>&lt;code>openssl genpkey -outform pem -algorithm rsa -pkeyopt rsa_keygen_bits:4096 -quiet -out &amp;lt;私鑰路徑&amp;gt;&lt;/code>&lt;/li>
&lt;li>&lt;code>pki --gen --type rsa --size 4096 --outform pem &amp;gt; &amp;lt;私鑰路徑&amp;gt;&lt;/code>&lt;/li>
&lt;li>如果私鑰需要加密，則可以在 OpenSSL 的指令內加上 &lt;code>-aes256&lt;/code> 來啟用&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>識別名稱只需要填寫 CN 就足夠了，如果有其它欄位需求在按照相同的格式填入&lt;/li>
&lt;li>根憑自簽指令如下：
&lt;ul>
&lt;li>根憑證一般有效時間都會比較長，下方範例為 3650 天
&lt;details>
&lt;summary>OpenSSL&lt;/summary>
```bash
openssl req -key &lt;根憑證私鑰路徑> -out &lt;憑證路徑> \
-x509 -days 3650 -subj /C=NO/
```
&lt;/details>
&lt;details>
&lt;summary>pki&lt;/summary>
```bash
pki --self --in &lt;根憑證私鑰路徑> \
--type priv --outform pem --lifetime 3650 \
--dn "CN=域名" > &lt;憑證路徑>
```
&lt;/details>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>簽發憑證指令如下：
&lt;details>
&lt;summary>OpenSSL&lt;/summary>
OpenSSL 需要先有 CSR 才能簽憑證，因此分為兩步
```bash
openssl req -new -key &lt;私鑰路徑> -out &lt;CSR 路徑> -config &lt;設定檔路徑>
openssl req -x509 -in &lt;CSR 路徑> -out &lt;憑證路徑> -CA &lt;根憑證路徑> -CAkey &lt;根憑證私鑰路徑>
```
&lt;/details>
&lt;details>
&lt;summary>pki&lt;/summary>
```bash
pki --pub --in &lt;私鑰路徑> | \
pki --issue --cakey &lt;根憑證私鑰路徑> --cacert &lt;根憑證路徑> \
--dn "CN=域名" --lifetime &lt;有效天數> \
--flag serverAuth --outform pem > &lt;憑證路徑>.pem
```
&lt;/details>
&lt;/li>
&lt;li>查看憑證資訊
&lt;ul>
&lt;li>&lt;code>openssl x509 -in &amp;lt;憑證路徑&amp;gt; -text -noout&lt;/code>&lt;/li>
&lt;li>&lt;code>pki --print --in &amp;lt;憑證路徑&amp;gt;&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="設定檔">設定檔
&lt;/h1>&lt;ul>
&lt;li>
&lt;p>下方僅給出本人使用過的範例，更多範例可以參考(官方文件)[https://docs.strongswan.org/docs/5.9/config/IKEv2.html]&lt;/p>
&lt;/li>
&lt;li>
&lt;p>配置資料夾預設位於 &lt;code>/etc/swanctl/&lt;/code> 底下&lt;/p>
&lt;ul>
&lt;li>設定檔放在 &lt;code>conf.d/&lt;/code> 底下，需要自行創建檔案
&lt;ul>
&lt;li>設定檔副檔名為 &lt;code>.conf&lt;/code>&lt;/li>
&lt;li>可以有多組設定檔，並且所有設定檔都會在開啟時讀取&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>憑證放在 &lt;code>x509/&lt;/code> 底下&lt;/li>
&lt;li>私鑰放在 &lt;code>private/&lt;/code> 底下
&lt;ul>
&lt;li>憑證和私鑰需要對應才能使用，缺一不可&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>根憑證放在 &lt;code>x509ca&lt;/code> 底下
&lt;ul>
&lt;li>憑證鏈可以包成一個檔案放入&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Windows 對於 IKEv2 握手算法有限制，可以參考下方的列表&lt;/p>
&lt;details>
&lt;summary>可用選項&lt;/summary>
&lt;p>3DES 系列
&lt;code>3des-sha1-prfsha1-modp1024&lt;/code>
&lt;code>3des-sha256-prfsha256-modp1024&lt;/code>
&lt;code>3des-sha384-prfsha384-modp1024&lt;/code>&lt;/p>
&lt;p>AES CBC 系列
&lt;code>aes128-sha1-prfsha1-modp1024&lt;/code>
&lt;code>aes128-sha256-prfsha256-modp1024&lt;/code>
&lt;code>aes128-sha384-prfsha384-modp1024&lt;/code>
&lt;code>aes192-sha1-prfsha1-modp1024&lt;/code>
&lt;code>aes192-sha256-prfsha256-modp1024&lt;/code>
&lt;code>aes192-sha384-prfsha384-modp1024&lt;/code>
&lt;code>aes256-sha1-prfsha1-modp1024&lt;/code>
&lt;code>aes256-sha256-prfsha256-modp1024&lt;/code>
&lt;code>aes256-sha384-prfsha384-modp1024&lt;/code>&lt;/p>
&lt;p>AES GCM 系列
&lt;code>aes128gcm128-prfsha1-modp1024&lt;/code>
&lt;code>aes128gcm128-prfsha256-modp1024&lt;/code>
&lt;code>aes128gcm128-prfsha384-modp1024&lt;/code>
&lt;code>aes256gcm128-prfsha1-modp1024&lt;/code>
&lt;code>aes256gcm128-prfsha256-modp1024&lt;/code>
&lt;code>aes256gcm128-prfsha384-modp1024&lt;/code>&lt;/p>
&lt;/details>
&lt;/li>
&lt;/ul>
&lt;details>
&lt;summary>範例&lt;/summary>
&lt;ul>
&lt;li>下方會給出最基本的設定檔範例，可以按照範例修改&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;span class="lnt">79
&lt;/span>&lt;span class="lnt">80
&lt;/span>&lt;span class="lnt">81
&lt;/span>&lt;span class="lnt">82
&lt;/span>&lt;span class="lnt">83
&lt;/span>&lt;span class="lnt">84
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">connections {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> rw-eap-mschapv2 {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> version = 2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 是否傳送憑證給終端，一定要開啟，因為這裡使用 PKI 進行身份驗證
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 可選 never、ifasked、always
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # never：不傳送
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # ifasked：收到憑證請求才傳送
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # always：主動傳送
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 預設為 ifasked
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> send_cert = always
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 是否傳送憑證請求
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 預設為 yes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> send_certreq = no
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 如果資料比較大，是否要進行分割
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 可選 yes、accept、force、no
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # yes：只要對方同意則資料進行分割
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # accept：本身的資料不分割，但通知對方可以接收資料分割
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # force：所有資料皆分割
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # no：自已不分割，並且告知對方不可分割
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 預設為 yes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fragmentation = yes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 指定 DHCP 池
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pools = rw_pool
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # IKEv2 加密算法
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 可以選擇多個加密算法，使用逗號分開
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 需要注意 Windows 和 strongSwan-network-manager
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proposals = chacha20poly1305-prfsha512-modp4096,aes256gcm128-prfsha256-modp1024,aes256-sha1-prfsha1-modp4096
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 是否允許多個客戶端
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 預設為 yes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mobike = yes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 伺服器驗證
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> local {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> auth = pubkey
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 憑證名稱
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> certs = test-server.crt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 填入連接時的域名或者 IP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> id = vpn.worldofwheat.cloudns.ch
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 客戶端驗證
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> remote {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 客戶端驗證方式，可以參考官方文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> auth = eap-mschapv2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> id = %any
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # IPsec 選項
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> children {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> rw-eap-mschapv2 {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> local_ts = 0.0.0.0/0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 加密算法
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> esp_proposals = chacha20poly1305,aes256-sha1,aes256gcm128
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># DHCP 池
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pools {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> rw_pool {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> addrs = 192.168.10.0/24
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 機密資訊
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">secrets {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 處理加密過的私鑰
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private-server {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> file = &amp;#34;private.key&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> secret = XXXXXX
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 設定一個 EAP 帳號
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> eap-Alice {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> id = Alice
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> secret = XXXXX
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h1 id="指令操作">指令操作
&lt;/h1>&lt;h1 id="如何-debug">如何 Debug
&lt;/h1>&lt;p>第一件事是先學會 IKEv2/IPsec 連線時候的握手協議，我推薦&lt;a class="link" href="https://www.cnblogs.com/efzju/p/5041797.html" target="_blank" rel="noopener"
>這篇&lt;/a>，只有學會了握手協議下面提到的工具才有用。&lt;/p>
&lt;p>debug 一定要會的方法：&lt;/p>
&lt;ul>
&lt;li>swanctl &amp;ndash;log
&lt;ul>
&lt;li>swanctl 提供的指令，可以讓連線過程中的所有封包都紀錄下來&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>手機版 strongSwan
&lt;ul>
&lt;li>原生的 UI 沒有辦法提供 log，基本上完全沒辦法 debug&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Windows 事件檢視器
&lt;ul>
&lt;li>Windows 問題很多而且 debug 相對困難，連線出現問題的時候只會給出沒有任何幫助的訊息。事件檢視器可以給出錯誤碼，可以到網路上查找對應的問題。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item></channel></rss>